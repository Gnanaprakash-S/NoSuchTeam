<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="5" hostname="LTIN619452" failures="1" tests="7" name="Default test" time="20.52" errors="0" timestamp="2025-06-29T12:38:40 IST">
  <testcase classname="tests.TestScripts" name="validateName" time="1.136">
    <failure type="java.lang.AssertionError" message="  it needs to fails but pass. expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError:   it needs to fails but pass. expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertFalse(Assert.java:79)
at tests.TestScripts.validateName(TestScripts.java:49)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- validateName -->
  <testcase classname="tests.TestScripts" name="validateName" time="0.922"/>
  <testcase classname="tests.TestScripts" name="validateName" time="1.115"/>
  <testcase classname="tests.TestScripts" name="validateName" time="0.994"/>
  <testcase classname="tests.TestScripts" name="validateName" time="0.971"/>
  <testcase classname="tests.TestScripts" name="validateName" time="0.916"/>
  <testcase classname="tests.TestScripts" name="validateName" time="0.923"/>
  <testcase classname="tests.TestScripts" name="validatePulse" time="0.0">
    <ignored/>
  </testcase> <!-- validatePulse -->
  <testcase classname="tests.TestScripts" name="validateCalculate" time="0.0">
    <ignored/>
  </testcase> <!-- validateCalculate -->
  <testcase classname="tests.TestScripts" name="validateDiastolic" time="0.0">
    <ignored/>
  </testcase> <!-- validateDiastolic -->
  <testcase classname="tests.TestScripts" name="validateSystolic" time="0.0">
    <ignored/>
  </testcase> <!-- validateSystolic -->
  <testcase classname="tests.TestScripts" name="validateAge" time="0.0">
    <ignored/>
  </testcase> <!-- validateAge -->
</testsuite> <!-- Default test -->
