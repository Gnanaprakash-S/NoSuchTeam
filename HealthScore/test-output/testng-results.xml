<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="68" passed="50" failed="18" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-01T10:18:58 IST" name="Default suite" finished-at="2025-07-01T10:22:39 IST" duration-ms="220620">
    <groups>
    </groups>
    <test started-at="2025-07-01T10:18:58 IST" name="Default test" finished-at="2025-07-01T10:22:39 IST" duration-ms="220620">
      <class name="tests.TestScripts">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:18:58 IST" name="setUp" finished-at="2025-07-01T10:19:04 IST" duration-ms="6042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:05 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:05 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateName([Ljava.lang.String;)[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:05 IST" name="validateName" data-provider="filereader" finished-at="2025-07-01T10:19:06 IST" duration-ms="439" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@341672e]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
  Name needs to fails but pass. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
  Name needs to fails but pass. expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.TestScripts.validateName(TestScripts.java:55)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateName -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:06 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateName([Ljava.lang.String;)[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:06 IST" name="validateName" data-provider="filereader" finished-at="2025-07-01T10:19:06 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@56fe4240]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateName -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:06 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:06 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateName([Ljava.lang.String;)[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:06 IST" name="validateName" data-provider="filereader" finished-at="2025-07-01T10:19:06 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@670f47e4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateName -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:06 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:06 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateName([Ljava.lang.String;)[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:06 IST" name="validateName" data-provider="filereader" finished-at="2025-07-01T10:19:07 IST" duration-ms="553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6560a22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateName -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:07 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateName([Ljava.lang.String;)[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:07 IST" name="validateName" data-provider="filereader" finished-at="2025-07-01T10:19:07 IST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3be349ed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateName -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:07 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateName([Ljava.lang.String;)[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:07 IST" name="validateName" data-provider="filereader" finished-at="2025-07-01T10:19:08 IST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@713f1ddf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateName -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:08 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateName([Ljava.lang.String;)[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:08 IST" name="validateName" data-provider="filereader" finished-at="2025-07-01T10:19:08 IST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@37f235ea]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateName -->
        <test-method signature="validateAge([Ljava.lang.String;)[pri:1, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:08 IST" name="validateAge" data-provider="filereader" finished-at="2025-07-01T10:19:09 IST" duration-ms="1048" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@479132c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAge -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:08 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:09 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:09 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateAge([Ljava.lang.String;)[pri:1, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:09 IST" name="validateAge" data-provider="filereader" finished-at="2025-07-01T10:19:10 IST" duration-ms="992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2991fbe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAge -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:10 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateAge([Ljava.lang.String;)[pri:1, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:10 IST" name="validateAge" data-provider="filereader" finished-at="2025-07-01T10:19:11 IST" duration-ms="1015" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@28369db0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
1000 Age needs to fails but pass. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
1000 Age needs to fails but pass. expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.TestScripts.validateAge(TestScripts.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAge -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:11 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:11 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateAge([Ljava.lang.String;)[pri:1, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:11 IST" name="validateAge" data-provider="filereader" finished-at="2025-07-01T10:19:13 IST" duration-ms="1157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3e4f318f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAge -->
        <test-method signature="validateAge([Ljava.lang.String;)[pri:1, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:13 IST" name="validateAge" data-provider="filereader" finished-at="2025-07-01T10:19:14 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@656d890a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAge -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:13 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:14 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:14 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateAge([Ljava.lang.String;)[pri:1, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:14 IST" name="validateAge" data-provider="filereader" finished-at="2025-07-01T10:19:14 IST" duration-ms="673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6245ce60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAge -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:14 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:14 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateAge([Ljava.lang.String;)[pri:1, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:14 IST" name="validateAge" data-provider="filereader" finished-at="2025-07-01T10:19:15 IST" duration-ms="614" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@30bf26df]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
18.0 Age needs to fails but pass. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
18.0 Age needs to fails but pass. expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.TestScripts.validateAge(TestScripts.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAge -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:15 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validatePulse([Ljava.lang.String;)[pri:2, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:15 IST" name="validatePulse" data-provider="filereader" finished-at="2025-07-01T10:19:16 IST" duration-ms="1089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3f16b11e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePulse -->
        <test-method signature="validatePulse([Ljava.lang.String;)[pri:2, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:16 IST" name="validatePulse" data-provider="filereader" finished-at="2025-07-01T10:19:17 IST" duration-ms="1014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5a009a44]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePulse -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:16 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validatePulse([Ljava.lang.String;)[pri:2, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:17 IST" name="validatePulse" data-provider="filereader" finished-at="2025-07-01T10:19:18 IST" duration-ms="1040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5de9a7cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePulse -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:17 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:18 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validatePulse([Ljava.lang.String;)[pri:2, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:18 IST" name="validatePulse" data-provider="filereader" finished-at="2025-07-01T10:19:19 IST" duration-ms="889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@114536bb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePulse -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:19 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validatePulse([Ljava.lang.String;)[pri:2, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:19 IST" name="validatePulse" data-provider="filereader" finished-at="2025-07-01T10:19:20 IST" duration-ms="776" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6bf0752b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePulse -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:20 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validatePulse([Ljava.lang.String;)[pri:2, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:20 IST" name="validatePulse" data-provider="filereader" finished-at="2025-07-01T10:19:21 IST" duration-ms="870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@24621161]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePulse -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:21 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validatePulse([Ljava.lang.String;)[pri:2, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:21 IST" name="validatePulse" data-provider="filereader" finished-at="2025-07-01T10:19:22 IST" duration-ms="1103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6090f10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePulse -->
        <test-method signature="validateSystolic([Ljava.lang.String;)[pri:3, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:22 IST" name="validateSystolic" data-provider="filereader" finished-at="2025-07-01T10:19:23 IST" duration-ms="1202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@4dc93b58]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSystolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:22 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:23 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateSystolic([Ljava.lang.String;)[pri:3, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:23 IST" name="validateSystolic" data-provider="filereader" finished-at="2025-07-01T10:19:25 IST" duration-ms="1865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@7286f054]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSystolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:25 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateSystolic([Ljava.lang.String;)[pri:3, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:25 IST" name="validateSystolic" data-provider="filereader" finished-at="2025-07-01T10:19:27 IST" duration-ms="1455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@24bcc7d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSystolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:27 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:27 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateSystolic([Ljava.lang.String;)[pri:3, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:27 IST" name="validateSystolic" data-provider="filereader" finished-at="2025-07-01T10:19:28 IST" duration-ms="1085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@da18e14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSystolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:28 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:28 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateSystolic([Ljava.lang.String;)[pri:3, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:28 IST" name="validateSystolic" data-provider="filereader" finished-at="2025-07-01T10:19:29 IST" duration-ms="1516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@68462be9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSystolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:29 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateSystolic([Ljava.lang.String;)[pri:3, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:29 IST" name="validateSystolic" data-provider="filereader" finished-at="2025-07-01T10:19:30 IST" duration-ms="1298" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3c46e6f6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
130 SystolicBP needs to pass but fails. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
130 SystolicBP needs to pass but fails. expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.TestScripts.validateSystolic(TestScripts.java:80)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSystolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:31 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateSystolic([Ljava.lang.String;)[pri:3, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:31 IST" name="validateSystolic" data-provider="filereader" finished-at="2025-07-01T10:19:32 IST" duration-ms="1615" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@1ecec098]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
131 SystolicBP needs to pass but fails. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
131 SystolicBP needs to pass but fails. expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.TestScripts.validateSystolic(TestScripts.java:80)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSystolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:32 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateDiastolic([Ljava.lang.String;)[pri:4, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:32 IST" name="validateDiastolic" data-provider="filereader" finished-at="2025-07-01T10:19:34 IST" duration-ms="1823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2718a545]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiastolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:34 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateDiastolic([Ljava.lang.String;)[pri:4, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:34 IST" name="validateDiastolic" data-provider="filereader" finished-at="2025-07-01T10:19:36 IST" duration-ms="1774" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@7914c299]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiastolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:36 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateDiastolic([Ljava.lang.String;)[pri:4, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:36 IST" name="validateDiastolic" data-provider="filereader" finished-at="2025-07-01T10:19:37 IST" duration-ms="1130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@4703f375]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiastolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:37 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:37 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateDiastolic([Ljava.lang.String;)[pri:4, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:37 IST" name="validateDiastolic" data-provider="filereader" finished-at="2025-07-01T10:19:39 IST" duration-ms="1287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@9b3d9fa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiastolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:39 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:39 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateDiastolic([Ljava.lang.String;)[pri:4, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:39 IST" name="validateDiastolic" data-provider="filereader" finished-at="2025-07-01T10:19:40 IST" duration-ms="1109" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5243d730]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[unexpected alert open: {Alert text : Provided BP values are not valid. Please Check Once Again}
  (Session info: chrome=137.0.7151.69): Provided BP values are not valid. Please Check Once Again
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5534094b7391e623e6df6f4b46452e98, findElement {value=bp-diastolic, using=id}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.69, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\2401014\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50925}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50925/devtoo..., se:cdpVersion: 137.0.7151.69, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5534094b7391e623e6df6f4b46452e98]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Provided BP values are not valid. Please Check Once Again}
  (Session info: chrome=137.0.7151.69): Provided BP values are not valid. Please Check Once Again
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5534094b7391e623e6df6f4b46452e98, findElement {value=bp-diastolic, using=id}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.69, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\2401014\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50925}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50925/devtoo..., se:cdpVersion: 137.0.7151.69, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5534094b7391e623e6df6f4b46452e98
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:136)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:48)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:474)
at pages.HomePage.verify(HomePage.java:72)
at pages.HomePage.diastolicBP(HomePage.java:143)
at tests.TestScripts.validateDiastolic(TestScripts.java:87)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiastolic -->
        <test-method signature="validateDiastolic([Ljava.lang.String;)[pri:4, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:40 IST" name="validateDiastolic" data-provider="filereader" finished-at="2025-07-01T10:19:41 IST" duration-ms="1466" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@355b4c34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
101 DiastolicBP needs to fails but pass. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
101 DiastolicBP needs to fails but pass. expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.TestScripts.validateDiastolic(TestScripts.java:88)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiastolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:40 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:41 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateDiastolic([Ljava.lang.String;)[pri:4, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:41 IST" name="validateDiastolic" data-provider="filereader" finished-at="2025-07-01T10:19:43 IST" duration-ms="1745" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@1a82453]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
150 DiastolicBP needs to fails but pass. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
150 DiastolicBP needs to fails but pass. expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.TestScripts.validateDiastolic(TestScripts.java:88)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDiastolic -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:43 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateCalculate()[pri:5, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:43 IST" name="validateCalculate" finished-at="2025-07-01T10:19:44 IST" duration-ms="752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCalculate -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:44 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:44 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:46 IST" duration-ms="1357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@51731be2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:46 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:47 IST" duration-ms="1484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@59cdef09]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:46 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:47 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:47 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:48 IST" duration-ms="918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@21959d4d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:48 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:48 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:48 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:50 IST" duration-ms="1538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@f5e7783]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:50 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:50 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:51 IST" duration-ms="1022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@1d758ec2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:51 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:51 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:52 IST" duration-ms="1084" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@622c658d]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failing to provide score for inputs :56,60-80 BPM,130,85]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failing to provide score for inputs :56,60-80 BPM,130,85
at org.testng.Assert.fail(Assert.java:111)
at tests.TestScripts.validateScoresGenerated(TestScripts.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:52 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:52 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:53 IST" duration-ms="834" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@21bf1b1f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failing to provide score for inputs :75,60-80 BPM,131,86]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failing to provide score for inputs :75,60-80 BPM,131,86
at org.testng.Assert.fail(Assert.java:111)
at tests.TestScripts.validateScoresGenerated(TestScripts.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:53 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:53 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:53 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:54 IST" duration-ms="1075" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5ed1bc4f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failing to provide score for inputs :76,81-90 BPM,139,89]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failing to provide score for inputs :76,81-90 BPM,139,89
at org.testng.Assert.fail(Assert.java:111)
at tests.TestScripts.validateScoresGenerated(TestScripts.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:54 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:55 IST" duration-ms="925" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@63cff421]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failing to provide score for inputs :1000,81-90 BPM,140,90]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failing to provide score for inputs :1000,81-90 BPM,140,90
at org.testng.Assert.fail(Assert.java:111)
at tests.TestScripts.validateScoresGenerated(TestScripts.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:54 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:55 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:57 IST" duration-ms="1281" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2e8417ea]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failing to provide score for inputs :45,91-100 BPM,149,99]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failing to provide score for inputs :45,91-100 BPM,149,99
at org.testng.Assert.fail(Assert.java:111)
at tests.TestScripts.validateScoresGenerated(TestScripts.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:55 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:57 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:57 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:58 IST" duration-ms="1081" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5d46057e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:58 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:58 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:58 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:19:59 IST" duration-ms="1385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@2784862c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:59 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:19:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:19:59 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:20:00 IST" duration-ms="1240" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@296b758]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failing to provide score for inputs :25,60-80 BPM,125,80]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failing to provide score for inputs :25,60-80 BPM,125,80
at org.testng.Assert.fail(Assert.java:111)
at tests.TestScripts.validateScoresGenerated(TestScripts.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method signature="validateScoresGenerated([Ljava.lang.String;)[pri:6, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:20:01 IST" name="validateScoresGenerated" data-provider="filereaderScore" finished-at="2025-07-01T10:20:01 IST" duration-ms="748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@7c7bb98b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateScoresGenerated -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:20:01 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:20:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:20:01 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:20:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="alertConsultDoctor()[pri:7, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:20:01 IST" name="alertConsultDoctor" finished-at="2025-07-01T10:20:19 IST" duration-ms="18114" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Systolic BP : 130  Diastolic BP : 70  Pulse BP :Below 40Alert not generated to consult a doctor]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Systolic BP : 130  Diastolic BP : 70  Pulse BP :Below 40Alert not generated to consult a doctor
at org.testng.Assert.fail(Assert.java:111)
at pages.HomePage.consultDoctor(HomePage.java:233)
at tests.TestScripts.alertConsultDoctor(TestScripts.java:145)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertConsultDoctor -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:20:20 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:20:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="alertNotInRange()[pri:8, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:20:20 IST" name="alertNotInRange" finished-at="2025-07-01T10:21:39 IST" duration-ms="79011" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Systolic BP : 130  Diastolic BP : 69  Pulse BP :Below 40 Alert not generated for BP values not in range]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Systolic BP : 130  Diastolic BP : 69  Pulse BP :Below 40 Alert not generated for BP values not in range
at org.testng.Assert.fail(Assert.java:111)
at pages.HomePage.notInRange(HomePage.java:249)
at tests.TestScripts.alertNotInRange(TestScripts.java:151)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertNotInRange -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:21:39 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:21:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="scoreCard()[pri:9, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:21:39 IST" name="scoreCard" finished-at="2025-07-01T10:22:17 IST" duration-ms="38503" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Systolic BP : 130  Diastolic BP : 70  Pulse BP :50-59 BPM result not generated alert interrupted]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Systolic BP : 130  Diastolic BP : 70  Pulse BP :50-59 BPM result not generated alert interrupted
at org.testng.Assert.fail(Assert.java:111)
at pages.HomePage.success(HomePage.java:269)
at tests.TestScripts.scoreCard(TestScripts.java:158)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scoreCard -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:18 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:19 IST" duration-ms="1038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@786cd782]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:18 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:19 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:19 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:19 IST" duration-ms="856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@71c2e64e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:19 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:19 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:20 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@4e5781b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:20 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:20 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:21 IST" duration-ms="1055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@127331eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:21 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:23 IST" duration-ms="1108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@636d5958]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:21 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:23 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:24 IST" duration-ms="1183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@55f7a963]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:23 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:24 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:24 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:25 IST" duration-ms="869" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@25cf86ca]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:25 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:25 IST" duration-ms="633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@69799b28]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:25 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:25 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:26 IST" duration-ms="701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3f30ccb2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:25 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:26 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:26 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:27 IST" duration-ms="1074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6b692fde]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:27 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:28 IST" duration-ms="730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@490af623]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:27 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:28 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:29 IST" duration-ms="1030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@68ee7cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:28 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:29 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:29 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:30 IST" duration-ms="836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5c819b74]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:30 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateHealthRemark([Ljava.lang.String;)[pri:10, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:30 IST" name="validateHealthRemark" data-provider="filereadRemarks" finished-at="2025-07-01T10:22:30 IST" duration-ms="819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@7081c3ba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHealthRemark -->
        <test-method is-config="true" signature="setUpPagesAndUtils()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:30 IST" name="setUpPagesAndUtils" finished-at="2025-07-01T10:22:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPagesAndUtils -->
        <test-method signature="validateResetButton()[pri:11, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:30 IST" name="validateResetButton" finished-at="2025-07-01T10:22:31 IST" duration-ms="826" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Result card should be hidden after reset. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Result card should be hidden after reset. expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertFalse(Assert.java:79)
at tests.TestScripts.validateResetButton(TestScripts.java:185)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResetButton -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScripts@b2c9a9c]" started-at="2025-07-01T10:22:31 IST" name="tearDown" finished-at="2025-07-01T10:22:39 IST" duration-ms="7371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TestScripts -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
